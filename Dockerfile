# ==================================
# Этап 1: Сборка фронтенд-приложения
# ==================================
FROM node:18-alpine AS build

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем package.json и устанавливаем зависимости
# Это кэшируется, чтобы не переустанавливать зависимости при каждом изменении кода
COPY package*.json ./
RUN npm install

# Копируем остальной код приложения
COPY . ./

# Запускаем сборку. Эта команда создаст папку /app/dist
RUN npm run build


# ======================================================
# Этап 2: Создание финального, легковесного образа
# ======================================================
FROM ghcr.io/static-web-server/static-web-server:2 AS production

# Указываем серверу, где находятся статические файлы
ENV SERVER_ROOT=/app

# --- КЛЮЧЕВОЙ МОМЕНТ ---
# Копируем собранные файлы из этапа 'build' в финальный образ
COPY --from=build /app/dist /app

# По умолчанию static-web-server слушает порт 80, так что EXPOSE не обязателен,
# но это хорошая практика для документирования.
EXPOSE 80
